name: Run Required Checks
run-name: PR Checks for ${{ github.ref_name }}

# Trigger jobs whenever Trunk Merge tests a PR using a `trunk-merge/` branch
on:
  push:
    branches:
      - trunk-merge/**

jobs:
  unit_tests:
    runs-on: ubuntu-latest
    name: All Unit Tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      # TODO: these will eventually overflow the shell line length
      # Make sure source has been formatted
      - run: clang-format --dry-run --Werror $(find source/ -iname '*.h' -o -iname '*.c')
      - run: clang-format --dry-run --Werror $(find test/ -iname '*.h' -o -iname '*.c')

      # Make sure it builds under both clang and gcc
      - run: CC=clang bazel build //...
      - run: CC=clang bazel run @hedron_compile_commands//:refresh_all # generates the compile_commands.json
      - run: clang-tidy --config-file ./source/.clang-tidy -p ./ $(find source/. -name "*.c")
      - run: clang-tidy --config-file ./test/.clang-tidy -p ./ $(find test/. -name "*.c")

      # Currently only running coverage for tracking. 
      # May eventually start failing CI if code isnt covered
      - run: CC=gcc bazel coverage --instrumentation_filter //source/... --combined_report=lcov //test/...
      - run: echo "COVERAGE_DAT=$(bazel info output_path)/_coverage/_coverage_report.dat" >> $GITHUB_ENV
      - uses: codecov/codecov-action@v4
        with:
          fail_ci_if_error: true
          files: ${{ env.COVERAGE_DAT }}
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true
          # coverage gets uploaded from the trunk merge staging branch
          # override and say coverage is from main
          override_branch: main
          # TODO coverage isnt reported for the right commits
          # it uses the merge commit into the staging branch instead of the code change

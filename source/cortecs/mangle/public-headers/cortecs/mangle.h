#ifndef CORTECS_FUNCTION_FUNCTION_H
#define CORTECS_FUNCTION_FUNCTION_H

#include <common.h>

// I have no idea why I need CONCAT_3 here but it doesn't work if using
// overloaded CONCAT.
#define CMP_1(arg0) arg0
#define CMP_2(arg0, arg1) CONCAT_3(arg0, _0, arg1)
#define CMP_3(arg0, arg1, ...) CMP_2(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_4(arg0, arg1, ...) CMP_3(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_5(arg0, arg1, ...) CMP_4(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_6(arg0, arg1, ...) CMP_5(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_7(arg0, arg1, ...) CMP_6(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_8(arg0, arg1, ...) CMP_7(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_9(arg0, arg1, ...) CMP_8(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_10(arg0, arg1, ...) CMP_9(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_11(arg0, arg1, ...) CMP_10(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_12(arg0, arg1, ...) CMP_11(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_13(arg0, arg1, ...) CMP_12(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_14(arg0, arg1, ...) CMP_13(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_15(arg0, arg1, ...) CMP_14(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_16(arg0, arg1, ...) CMP_15(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_17(arg0, arg1, ...) CMP_16(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_18(arg0, arg1, ...) CMP_17(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_19(arg0, arg1, ...) CMP_18(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_20(arg0, arg1, ...) CMP_19(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_21(arg0, arg1, ...) CMP_20(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_22(arg0, arg1, ...) CMP_21(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_23(arg0, arg1, ...) CMP_22(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_24(arg0, arg1, ...) CMP_23(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_25(arg0, arg1, ...) CMP_24(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_26(arg0, arg1, ...) CMP_25(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_27(arg0, arg1, ...) CMP_26(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_28(arg0, arg1, ...) CMP_27(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_29(arg0, arg1, ...) CMP_28(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_30(arg0, arg1, ...) CMP_29(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_31(arg0, arg1, ...) CMP_30(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_32(arg0, arg1, ...) CMP_31(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_33(arg0, arg1, ...) CMP_32(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_34(arg0, arg1, ...) CMP_33(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_35(arg0, arg1, ...) CMP_34(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_36(arg0, arg1, ...) CMP_35(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_37(arg0, arg1, ...) CMP_36(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_38(arg0, arg1, ...) CMP_37(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_39(arg0, arg1, ...) CMP_38(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_40(arg0, arg1, ...) CMP_39(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_41(arg0, arg1, ...) CMP_40(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_42(arg0, arg1, ...) CMP_41(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_43(arg0, arg1, ...) CMP_42(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_44(arg0, arg1, ...) CMP_43(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_45(arg0, arg1, ...) CMP_44(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_46(arg0, arg1, ...) CMP_45(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_47(arg0, arg1, ...) CMP_46(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_48(arg0, arg1, ...) CMP_47(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_49(arg0, arg1, ...) CMP_48(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_50(arg0, arg1, ...) CMP_49(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_51(arg0, arg1, ...) CMP_50(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_52(arg0, arg1, ...) CMP_51(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_53(arg0, arg1, ...) CMP_52(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_54(arg0, arg1, ...) CMP_53(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_55(arg0, arg1, ...) CMP_54(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_56(arg0, arg1, ...) CMP_55(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_57(arg0, arg1, ...) CMP_56(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_58(arg0, arg1, ...) CMP_57(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_59(arg0, arg1, ...) CMP_58(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_60(arg0, arg1, ...) CMP_59(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_61(arg0, arg1, ...) CMP_60(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_62(arg0, arg1, ...) CMP_61(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP_63(arg0, arg1, ...) CMP_62(CONCAT_3(arg0, _0, arg1), __VA_ARGS__)
#define CMP(...) OVERLOADED_MACRO_0(CMP_, __VA_ARGS__)

#define CN_2(arg0, arg1) CONCAT_3(arg0, _, arg1)
#define CN_3(arg0, arg1, ...) CN_2(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_4(arg0, arg1, ...) CN_3(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_5(arg0, arg1, ...) CN_4(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_6(arg0, arg1, ...) CN_5(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_7(arg0, arg1, ...) CN_6(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_8(arg0, arg1, ...) CN_7(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_9(arg0, arg1, ...) CN_8(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_10(arg0, arg1, ...) CN_9(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_11(arg0, arg1, ...) CN_10(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_12(arg0, arg1, ...) CN_11(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_13(arg0, arg1, ...) CN_12(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_14(arg0, arg1, ...) CN_13(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_15(arg0, arg1, ...) CN_14(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_16(arg0, arg1, ...) CN_15(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_17(arg0, arg1, ...) CN_16(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_18(arg0, arg1, ...) CN_17(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_19(arg0, arg1, ...) CN_18(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_20(arg0, arg1, ...) CN_19(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_21(arg0, arg1, ...) CN_20(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_22(arg0, arg1, ...) CN_21(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_23(arg0, arg1, ...) CN_22(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_24(arg0, arg1, ...) CN_23(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_25(arg0, arg1, ...) CN_24(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_26(arg0, arg1, ...) CN_25(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_27(arg0, arg1, ...) CN_26(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_28(arg0, arg1, ...) CN_27(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_29(arg0, arg1, ...) CN_28(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_30(arg0, arg1, ...) CN_29(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_31(arg0, arg1, ...) CN_30(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_32(arg0, arg1, ...) CN_31(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_33(arg0, arg1, ...) CN_32(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_34(arg0, arg1, ...) CN_33(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_35(arg0, arg1, ...) CN_34(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_36(arg0, arg1, ...) CN_35(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_37(arg0, arg1, ...) CN_36(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_38(arg0, arg1, ...) CN_37(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_39(arg0, arg1, ...) CN_38(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_40(arg0, arg1, ...) CN_39(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_41(arg0, arg1, ...) CN_40(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_42(arg0, arg1, ...) CN_41(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_43(arg0, arg1, ...) CN_42(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_44(arg0, arg1, ...) CN_43(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_45(arg0, arg1, ...) CN_44(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_46(arg0, arg1, ...) CN_45(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_47(arg0, arg1, ...) CN_46(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_48(arg0, arg1, ...) CN_47(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_49(arg0, arg1, ...) CN_48(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_50(arg0, arg1, ...) CN_49(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_51(arg0, arg1, ...) CN_50(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_52(arg0, arg1, ...) CN_51(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_53(arg0, arg1, ...) CN_52(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_54(arg0, arg1, ...) CN_53(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_55(arg0, arg1, ...) CN_54(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_56(arg0, arg1, ...) CN_55(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_57(arg0, arg1, ...) CN_56(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_58(arg0, arg1, ...) CN_57(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_59(arg0, arg1, ...) CN_58(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_60(arg0, arg1, ...) CN_59(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_61(arg0, arg1, ...) CN_60(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_62(arg0, arg1, ...) CN_61(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN_63(arg0, arg1, ...) CN_62(CONCAT_3(arg0, _, arg1), __VA_ARGS__)
#define CN(...) OVERLOADED_MACRO_0(CN_, __VA_ARGS__)

// I also have no idea why it all works here. the C macro system is quite
// lovely...
#define CT(...) CONCAT(1, CMP(__VA_ARGS__), _2)

#define FOOBAR_PREFIX(name) CONCAT(FOOBAR_, name)

#endif
#ifndef CORTECS_FUNCTION_FUNCTION_H
#define CORTECS_FUNCTION_FUNCTION_H

#include <common.h>

#define cortecs_function_0(name) name
#define cortecs_function_1(name, a) cortecs_function_0(CONCAT(name, _, a))
#define cortecs_function_2(name, a, ...) cortecs_function_1(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_3(name, a, ...) cortecs_function_2(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_4(name, a, ...) cortecs_function_3(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_5(name, a, ...) cortecs_function_4(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_6(name, a, ...) cortecs_function_5(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_7(name, a, ...) cortecs_function_6(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_8(name, a, ...) cortecs_function_7(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_9(name, a, ...) cortecs_function_8(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_10(name, a, ...) cortecs_function_9(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_11(name, a, ...) cortecs_function_10(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_12(name, a, ...) cortecs_function_11(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_13(name, a, ...) cortecs_function_12(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_14(name, a, ...) cortecs_function_13(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_15(name, a, ...) cortecs_function_14(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_16(name, a, ...) cortecs_function_15(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_17(name, a, ...) cortecs_function_16(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_18(name, a, ...) cortecs_function_17(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_19(name, a, ...) cortecs_function_18(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_20(name, a, ...) cortecs_function_19(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_21(name, a, ...) cortecs_function_20(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_22(name, a, ...) cortecs_function_21(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_23(name, a, ...) cortecs_function_22(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_24(name, a, ...) cortecs_function_23(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_25(name, a, ...) cortecs_function_24(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_26(name, a, ...) cortecs_function_25(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_27(name, a, ...) cortecs_function_26(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_28(name, a, ...) cortecs_function_27(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_29(name, a, ...) cortecs_function_28(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_30(name, a, ...) cortecs_function_29(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_31(name, a, ...) cortecs_function_30(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_32(name, a, ...) cortecs_function_31(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_33(name, a, ...) cortecs_function_32(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_34(name, a, ...) cortecs_function_33(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_35(name, a, ...) cortecs_function_34(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_36(name, a, ...) cortecs_function_35(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_37(name, a, ...) cortecs_function_36(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_38(name, a, ...) cortecs_function_37(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_39(name, a, ...) cortecs_function_38(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_40(name, a, ...) cortecs_function_39(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_41(name, a, ...) cortecs_function_40(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_42(name, a, ...) cortecs_function_41(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_43(name, a, ...) cortecs_function_42(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_44(name, a, ...) cortecs_function_43(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_45(name, a, ...) cortecs_function_44(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_46(name, a, ...) cortecs_function_45(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_47(name, a, ...) cortecs_function_46(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_48(name, a, ...) cortecs_function_47(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_49(name, a, ...) cortecs_function_48(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_50(name, a, ...) cortecs_function_49(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_51(name, a, ...) cortecs_function_50(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_52(name, a, ...) cortecs_function_51(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_53(name, a, ...) cortecs_function_52(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_54(name, a, ...) cortecs_function_53(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_55(name, a, ...) cortecs_function_54(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_56(name, a, ...) cortecs_function_55(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_57(name, a, ...) cortecs_function_56(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_58(name, a, ...) cortecs_function_57(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_59(name, a, ...) cortecs_function_58(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_60(name, a, ...) cortecs_function_59(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_61(name, a, ...) cortecs_function_60(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_62(name, a, ...) cortecs_function_61(CONCAT(name, _, a), __VA_ARGS__)
#define cortecs_function_63(name, a, ...) cortecs_function_62(CONCAT(name, _, a), __VA_ARGS__)

#define cortecs_function(name, ...) OVERLOADED_MACRO_1(cortecs_function_, name, __VA_ARGS__)

#endif